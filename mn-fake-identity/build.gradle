plugins {
    id 'groovy'
    id 'io.spring.dependency-management'
    id 'net.ltgt.apt-idea'
    id 'com.github.psxpaul.execfork'
}

version '0.1'
group 'demo.identity'

dependencyManagement {
    imports {
        mavenBom "io.micronaut:micronaut-bom:$micronautVersion"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'io.micronaut:micronaut-inject-java'

    compile "org.codehaus.groovy:groovy:$groovyVersion"
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"

    compile 'io.micronaut:micronaut-http-client'
    compile 'io.micronaut:micronaut-http-server-netty'
    compile 'io.micronaut:micronaut-runtime-groovy'
    compile 'io.micronaut:micronaut-inject'
    compile 'io.micronaut:micronaut-runtime'

    compile "io.micronaut:micronaut-tracing"
    compile 'io.jaegertracing:jaeger-thrift:1.0.0'
    compile project(':tracing-with-logback-json-classic')

    compileOnly 'io.micronaut:micronaut-inject-groovy'
    compileOnly 'io.micronaut:micronaut-inject-java'

    runtime 'ch.qos.logback:logback-classic:1.2.3'

    testCompile 'io.micronaut:micronaut-inject-groovy'
    testCompile 'org.spockframework:spock-core:1.3-groovy-2.5'
}

task startService(type: com.github.psxpaul.task.JavaExecFork){
    classpath = sourceSets.main.runtimeClasspath
    workingDir = parent.projectDir
    main = "demo.identity.IdentityService"
    //stopAfter = parent.tasks.findByName("clickEnterToCloseServices")
    waitForPort = 8086

    doLast {
        logger.info("IdentityService should be running")
    }

    finalizedBy parent.tasks.findByName("clickEnterToCloseServices")
}